Documentation API.


in api.h
--------


PrintN(int x)
prints a integer
usage:
PrintN(35);
PrintN(34);
-> 3534

--------------------
printC(char x)
prints a char
usage:
PrintC('a');
PrintC('b');
-> ab

--------------------
printS(char *s)
prints a string
usage:
PrintS("hello");
PrintS("world");
-> helloworld

--------------------
PrintNln(int x)
prints a integer and new line
usage:
PrintNln(35);
PrintNln(34);
-> 35
-> 34

--------------------
printCln(char x)
prints a char and new line
usage:
PrintCln('a');
PrintCln('b');
-> a
-> b

--------------------
printSln(char *s)
prints a string and new line
usage:
PrintSln("hello");
PrintSln("world");
-> hello
-> world

--------------------
char *getStr()
reads a string to buffer.
usage:
char *input;
input = getStr();

--------------------
printP()
prints a list of all active and waiting processes
usage:
printP();

--------------------
sleep(int ms, pid p)
sets the calling function in waiting mode for ms milliseconds

--------------------
block(pid p)
sets the caling function in wait mode until released.

--------------------
unblock(pid p)
reenables a waiting process with pid p

--------------------
kill(pid p)
terminates the process with pid p

--------------------

functions in other/stdlib  
--------------------
char strCmp(char *a,char *b)
returns 1 if a=b else 0
usage:
char a = "hello";
char b = "hello";
char c = "world";
char i;

i = strCmp(a,b);
-> i = 1;
i = strCmp(a,c);
-> i = 0;

functions in other/stdlib folowing standard c.
------------------------
itoa()
atoi()
strlen()
strrev()
strcpy()
strcmp()
strchr()

